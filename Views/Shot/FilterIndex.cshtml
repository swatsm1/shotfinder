@model ShotFinderMVC.Models.StoresViewModel

@{
    ViewData["Title"] = "Rite Aid Shot Finder";
}

<br />


<div>
    <h5>Please Enter a Valid Zipcode</h5>
    <hr />
    <dl class="row">
    </dl>
</div>

<form asp-action="FilterIndex" method="get">
    <p>
        Enter Zip: @*<input type="text" name="SearchString">*@
        @Html.TextBox("SearchString", null, new { required = "required" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="submit" value="Search" class="btn btn-sm btn-primary" />

        @Html.ValidationMessage("SearchString")
    </p>
</form>
<br />



@if (Model.ShotStores != null)
{
    <div class="card-group">

        <div class="card">

            <div class="card-body" style="font-size:smaller">

                <table class="table table-striped table-sm table-bordered">
                    <thead>

                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].StoreNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].Address)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].city)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].State)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].Zip)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].Status)
                            </th>

                           
                        </tr>

                    </thead>
                    <tbody>
                        @foreach (var item in Model.ShotStores)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StoreNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Address)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.city)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.State)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Zip)
                                </td>
                                <td>
                                    @if (item.Status == "Store Has Appointments" || item.Status == "Store Has Appointment times")
                                    {
                                        <span style="color:red;font:bolder; ">@item.Status </span>
                                    }
                                    else
                                    {
                                        <span style="color:black;">@item.Status </span>
                                    }


                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@if (Model.errors != null)
{
    if (!(TempData == null))
    {
        TempData["Message"] = ("Error: " + Model.errors.message);
    }
}

