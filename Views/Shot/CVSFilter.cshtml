@model ShotFinderMVC.Models.StoresViewModel

@{
    ViewBag.Title = "CVSFilter";
}


<br />

<h5>Please Select a State</h5>


<br />


<form asp-action="CVSFilter" method="get">
    <p>
        @Html.DropDownList("SearchString",
        EnumHelper.GetSelectList(typeof(ShotFinder.Class.StoreSelections.eStates)),
        "Select a State",
        new { @class = "form-control" })

        <!--Enter Zip:--> @*<input type="text" name="SearchString">*@
        <!--@Html.TextBox("SearchString", null, new { required = "required" })
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })-->

        <br />


        <input type="submit" value="Search" class="btn btn-sm btn-primary" />

    </p>
</form>

@if (Model.ShotStores != null)
{
    <div class="card-group">

        <div class="card">

            <div class="card-body" style="font-size:smaller">

                <table class="table table-striped table-sm table-bordered">
                    <thead>

                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].city)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].State)
                            </th>
                          
                            <th>
                                @Html.DisplayNameFor(model => model.ShotStores[0].Status)
                            </th>

                        </tr>

                    </thead>
                    <tbody>
                        @foreach (var item in Model.ShotStores)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.city)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.State)
                                </td>
                                
                                <td>
                                    @if (item.Status != "Fully Booked")
                                    {
                                        <span style="color:red;font:bolder; ">@item.Status </span>
                                    }
                                    else
                                    {
                                        <span style="color:black;">@item.Status </span>
                                    }


                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@if (Model.errors != null)
{
    if (!(TempData == null))
    {
        TempData["Message"] = ("Error: " + Model.errors.message);
    }
}


@*<h2>CVSFilter</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
    }

    </table>*@
